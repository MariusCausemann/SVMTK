#!/usr/bin/python


if __name__ =='__main__':
        import brainmesh as bm
        import argparse
        import os
        hemi , surface = os.path.basename(__file__).split(".")[0:2]
        parser = argparse.ArgumentParser(description='The remeshing of an {}-{}.stl using Laplacian or volume preserving Laplacian '.format(hemi,surface) )

        parser.add_argument("--iter"   ,type=int  , default=2      ,help = "The number of iterations for the remesh algorithm.")
        parser.add_argument("--edge"   ,type=float, default=1.0    ,help = "The preffered edgelength in the resulting mesh. The default value is 1.0 (mm)")
        parser.add_argument("--protect",action='store_true'  ,help = "Included to protect the edges during remeshing. Note : This option will use more time to finish.")
        Z = parser.parse_args() 

        hemi , surface = os.path.basename(__file__).split(".")[0:2]

        surf  = bm.BrainSurface("../mesh/"+hemi+"-"+surface+".stl")

        if Z.protect : 
           surf.isotropic_remeshing(Z.edge,Z.iter,True)
        else :
           surf.isotropic_remeshing(Z.edge,Z.iter,False)

        surf.save("../mesh/"+hemi+"-"+surface+"-proc.stl") # make wrtier




